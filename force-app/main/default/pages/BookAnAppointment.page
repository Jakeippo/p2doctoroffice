<apex:page standardController="Appointment__c" recordSetVar="appointments"
extensions="AppointmentExtender" id="apppointment">
<script type="text/javascript">
    var validTable = [];
    var weekDates = [];
    var months = ["January","February","March","April","May","June","July","August","September","October","November","December"];
    var currentWeek = 0;
    var selectedYear = 0;
    var selectedMonth = 0;
    var selectedDay = 0;
    var selectedTime = "";
    function getTimes(){
    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.AppointmentExtender.getValidDates}',
        currentWeek,'{!doctorId}',
        function(result, event){
            console.log(event.status);
            console.log(JSON.stringify(result));
            console.log(JSON.stringify(result[0]));
            console.log(JSON.stringify(result[0][0]));
            if (event.status) {
               validTable[currentWeek] = result;
               console.log(JSON.stringify(validTable));
               RefreshAll();
            } else if (event.type === 'exception') {
            } else {
            }
        }, 
        {escape: true});
    }
    function getDisplayDates() {
    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.AppointmentExtender.getWeekDates}', 
        currentWeek,
        function(result, event){
            console.log(event.status);
            console.log(JSON.stringify(result));
            console.log(JSON.stringify(result[0]));
            console.log(JSON.stringify(result[0][0]));
            if (event.status) {
                weekDates[currentWeek] = result;
               console.log(JSON.stringify(validTable));
               setWeekdays();
            } else if (event.type === 'exception') {
            } else {
            }
        }, 
        {escape: true});
    }
    function checkExistingAppointment(column, row){
        let buttonC = 'apppointment:week:time:'+column.toString()+':day:'+row.toString()+':select';
        let shouldEnable = validTable[currentWeek][parseInt(row)][parseInt(column)];
        console.log(buttonC);
        console.log(shouldEnable); 
        document.getElementById(buttonC).disabled=!shouldEnable;
        if(!shouldEnable){
            document.getElementById(buttonC).style.background='gray';
        }else{
            document.getElementById(buttonC).style.background='white';
        }
    }

    function RefreshAll(){
        var i = 0;
        var j = 0;
        while(i<10){
            while(j<7){
                checkExistingAppointment(i,j);
                j += 1;
            }
            i+=1;
            j=0;
        }
        //rerenderWeek();
    }

    function setWeekdays(){
        var dayMonth = "";
        var dayDate = "";
        var dayYear = "";
        var step = 0;
        while(step<7){
            console.log(step);
            dayMonth = "displaydates:"+step.toString()+":month";
            console.log(dayMonth);
            dayDate = "displaydates:"+step.toString()+":day";
            console.log(dayDate);
            dayYear = "displaydates:"+step.toString()+":year";
            console.log(dayYear);
            document.getElementById(dayMonth).innerText = months[parseInt(weekDates[currentWeek][step][0])-1];
            document.getElementById(dayDate).innerText = weekDates[currentWeek][step][1];
            document.getElementById(dayYear).innerText = weekDates[currentWeek][step][2];
            step+=1;
        }
    }

    function prevWeek(){
        currentWeek--;
        if(currentWeek==0){
            document.getElementById("apppointment:week:previousWeek").disabled=true;
        }
        console.log(currentWeek);
        setWeekData();
    }

    function nextWeek(){
        currentWeek++;
        document.getElementById("apppointment:week:previousWeek").disabled=false;
        console.log(currentWeek);
        if(weekDates[currentWeek]){
            setWeekData();
        }else{
            getWeekData();
        }
    }
    
    function getWeekData(){
        getDisplayDates();
        getTimes();
    }
    function setWeekData(){
        setWeekdays();
    }

    function selectDate(day, time){
        console.log(day);
        console.log(time);
        console.log(JSON.stringify(weekDates));
        console.log(JSON.stringify(weekDates[currentWeek]));
        console.log(JSON.stringify(result[currentWeek][day]));
        // selectedYear = parseInt(weekDates[currentWeek][day][2]);
        // selectedMonth = parseInt(weekDates[currentWeek][day][0])+1;
        // selectedDay = parseInt(weekDates[currentWeek][day][1]);
        // selectedTime = time;
        // updateSelection();
    }

    function updateSelection(){
        document.getElementById("selectedDate").innerText = selectedMonth + "/" + selectedDay + "/" + selectedYear;
        document.getElementById("selectedTime").innerText = selectedTime;
    }
    
    getWeekData();
</script>

<h1>Book An Appointment</h1>
    <apex:pageBlock>
        <apex:pageBlockTable value = "{!displayedAppointments}" var = "a">
            <apex:column value = "{!a.Doctor__c}" />
            <apex:column value = "{!a.DoctorName__c}" />
            <apex:column value = "{!a.AppointmentDate__c}" />
        </apex:pageBlockTable>
        <apex:form>
            Select a date/time
            <apex:inputField value="{!appt.AppointmentDate__c}"/>
            <apex:commandButton action="{!save}" value="SAVE"/>
        </apex:form>
           
    </apex:pageBlock>

    <apex:form id="week"> 
    
    <br></br>
    <table id="displaydates">
        <tr>
            <td>Sunday</td>
            <td>Monday</td>
            <td>Tuesday</td>
            <td>Wednesday</td>
            <td>Thusday</td>
            <td>Friday</td>
            <td>Saturday</td>
        </tr>
        <tr>
            <td><label id="displaydates:0:month">defaultuary</label> <label id="displaydates:0:day">0</label></td>
            <td><label id="displaydates:1:month">defaultuary</label> <label id="displaydates:1:day">1</label></td>
            <td><label id="displaydates:2:month">defaultuary</label> <label id="displaydates:2:day">2</label></td>
            <td><label id="displaydates:3:month">defaultuary</label> <label id="displaydates:3:day">3</label></td>
            <td><label id="displaydates:4:month">defaultuary</label> <label id="displaydates:4:day">4</label></td>
            <td><label id="displaydates:5:month">defaultuary</label> <label id="displaydates:5:day">5</label></td>
            <td><label id="displaydates:6:month">defaultuary</label> <label id="displaydates:6:day">7</label></td>
        </tr>
        <tr>
            <td id="displaydates:0:year">0000</td>
            <td id="displaydates:1:year">0000</td>
            <td id="displaydates:2:year">0000</td>
            <td id="displaydates:3:year">0000</td>
            <td id="displaydates:4:year">0000</td>
            <td id="displaydates:5:year">0000</td>
            <td id="displaydates:6:year">0000</td>
        </tr>
    </table>
        <apex:repeat value="{!values}" var="a" id="time">
                <apex:repeat value="{!myS}" var="b" id="day">
                    <apex:commandButton onClick="selectDate('{!a}','{!b}');return false;" value="{!a}" id="select"/>
                </apex:repeat>
            <br></br>
        </apex:repeat>
        <apex:commandButton onClick="prevWeek();return false;" value="Previous Week" id="previousWeek"/>
        <apex:commandButton onClick="nextWeek();return false;" value="Next Week" id="nextWeek"/>
        <br></br>
        Doctor: <apex:outputText value="{!DoctorName}"/>
        <br></br>
        <label id="selectedDate">aaa</label>
        <br></br>
        <label id="selectedTime">aaa</label>
    </apex:form>
    
</apex:page>
